/* Видали цей рядок, якщо він ще є: @import url('site.css'); */

html {
    font-size: 14px;
}

@media (min-width: 768px) {
    html {
        font-size: 16px;
    }
}

.btn:focus, .btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
    box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}

html {
    position: relative;
    min-height: 100%;
}


body {
    background-color: #f0ebe5; /* Встановлюємо бажаний фон для всіх сторінок */
    /* Тут можуть бути інші глобальні стилі для body, якщо потрібні, наприклад, font-family */
}

/* Цей .navbar { display: block; } може бути не потрібним або конфліктувати з новим хедером, 
   який використовує flex. Подивимося, як буде без нього, або закоментуй його, якщо виникнуть проблеми з navbar.
.navbar {
    display: block; 
}
*/

footer {
    height: 10vh;
    background-color: white;
}

/* Стилі для sidebar, якщо ти вирішив його повністю прибрати з _Layout.cshtml, 
   то ці стилі можуть стати непотрібними. Якщо залишаєш для інших сторінок - нехай будуть. */
.sidebar {
    position: fixed;
    top: 0;
    left: -250px;
    width: 250px;
    height: 100%;
    overflow-y: auto;
    background-color: #ffffff;
    color: #212529;
    z-index: 1050;
    transition: left 0.3s ease;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    border-right: 1px solid #dee2e6;
}

    .sidebar.open {
        left: 0;
    }

/* #menu-toggle - якщо ти прибрав кнопку з хедера, цей стиль не потрібен.
#menu-toggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    color: #0d6efd;
    margin-right: 10px;
}
*/

.main-container {
    height: 80vh; /* Цей стиль може потребувати коригування залежно від висоти нового хедера та футера */
    min-height: 80%;
}

.sidebar ul li i {
    margin-right: 8px;
}

/* #menu-toggle, #menu-close - якщо кнопки прибрані, ці стилі не потрібні.
#menu-toggle,
#menu-close {
    border: none;
    outline: none;
    box-shadow: none;
}

#menu-toggle:focus,
#menu-close:focus {
    outline: none;
    box-shadow: none;
    text-decoration: none;
}
*/

.article-item-container, .article-details-container {
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    background-color: white;
    border: 2px white solid;
    border-radius: 5px;
}

.article-list {
    justify-content: center;
    width: 100%;
}

    .article-list ul {
        align-self: center;
        list-style-type: none; /* Видаляє маркери для списку */
        margin: 0px 15px 0px 15px;
        padding: 0;
    }

.article-item {
    margin-bottom: 10px; /* Додає відступ між елементами списку */
    padding: 0;
}

.article-list-text {
    padding-left: 15px;
    padding-bottom: 10px
}

.article-details-container {
    height: 98%;
    margin: 5px 15px 5px 15px;
    padding: 5px 5px 5px 5px;
}

main {
    height: 100%;
}


/* ----------------------------------------- */
/* Стилі для нового хедера (ДОДАНО НОВІ СТИЛІ) */
/* ----------------------------------------- */

.main-header {
    background-color: #f0ebe5; /* Світло-бежевий фон. Адаптуй колір до мокапу. */
    padding: 10px 20px;
    border-bottom: 1px solid #e0d9cf; /* Тонка лінія знизу, опціонально */
}

/* .main-header .container-fluid вже має d-flex justify-content-between align-items-center з HTML */

/* Ліва частина хедера (лого) */
.header-left .header-logo {
    font-family: 'Lora', serif; /* Або твій брендовий шрифт */
    font-size: 22px;
    font-weight: bold;
    color: #333;
    text-decoration: none;
}

/* Центральна частина хедера (заголовок "Menu panel") */
.header-center .header-title {
    font-family: 'Open Sans', sans-serif; /* Або твій основний шрифт */
    font-size: 18px;
    color: #555;
    font-weight: 600;
}

/* Права частина хедера (іконка користувача / посилання Login/Register) */
.header-right .user-icon-link .user-avatar { /* Для аватара користувача */
    height: 30px;
    width: 30px;
    border-radius: 50%;
}

.header-right .header-auth-link,
.header-right .nav-link.text-dark { /* Для посилань Login/Register та Профіль/Logout */
    font-family: 'Open Sans', sans-serif;
    font-size: 16px;
    color: #333 !important; /* Будь обережним з !important */
    text-decoration: none;
    padding: 5px 10px;
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out;
}

    .header-right .header-auth-link:hover,
    .header-right .nav-link.text-dark:hover {
        background-color: rgba(0, 0, 0, 0.05);
        text-decoration: none;
    }

.header-right form.form-inline .btn-link { /* Для кнопки Logout */
    padding-top: 5px;
    padding-bottom: 5px;
    line-height: normal; /* Щоб текст був по центру кнопки */
}

/* --------------------------------------------- */
/* Кінець стилів для нового хедера         */
/* --------------------------------------------- */


/* ---------------------------------------------------- */
/* Стилі для головної сторінки (Menu Page)             */
/* ---------------------------------------------------- */

.menu-page-container {
    padding-top: 20px; /* Відступ від хедера */
    padding-bottom: 20px;
    /* Якщо фон сторінки вже #f0ebe5, то тут фон не потрібен.
       Якщо ні, то: background-color: #f0ebe5; */
}

/* Секція блоків категорій */
.category-blocks-section {
    display: flex; /* Розташовуємо блоки в ряд */
    justify-content: center; /* Центруємо блоки по горизонталі */
    align-items: stretch; /* Розтягуємо блоки по висоті, щоб були однакові */
    flex-wrap: wrap; /* Дозволяємо переносити на новий рядок, якщо не вміщаються */
    gap: 0; /* Прибираємо проміжки, якщо блоки мають стикатися */
    margin-bottom: 30px; /* Відступ до секції з картками */
    /* Можливо, знадобиться max-width та margin: auto для центрування всієї групи блоків,
       якщо вони не займають всю ширину. На мокапі вони виглядають на всю ширину. */
}

.category-block {
    flex-grow: 1; /* Дозволяємо блокам рости, щоб зайняти доступний простір */
    flex-basis: 0; /* Базова ширина, щоб flex-grow працював коректно */
    min-width: 150px; /* Мінімальна ширина блоку, щоб не були занадто вузькими */
    padding: 40px 20px; /* Внутрішні відступи (великі зверху/знизу для тексту по центру) */
    text-align: center;
    background-color: #FAF0E6; /* Основний світлий фон для блоків */
    /* border-left: 1px solid #e0d9cf; /* Розділювачі, якщо потрібні. Першому можна прибрати */
    /* border-right: 1px solid #e0d9cf; */
    box-sizing: border-box;
    display: flex; /* Для центрування тексту всередині */
    justify-content: center;
    align-items: center;
}

    .category-block.alt-bg {
        background-color: #b0a18f; /* Темніший фон для чергування, як на мокапі */
    }

    /* Опціонально: прибрати лівий бордер у першого і правий у останнього, якщо використовуються бордери
.category-block:first-child {
    border-left: none;
}
.category-block:last-child {
    border-right: none;
}
*/

    .category-block .category-link {
        font-family: 'Open Sans', sans-serif; /* Або твій основний шрифт */
        font-size: 20px; /* Розмір тексту категорії */
        font-weight: 600;
        color: #333; /* Колір тексту */
        text-decoration: none;
        display: block; /* Щоб посилання займало весь блок */
    }

/* Секція карток контенту */
.content-cards-section {
    display: flex;
    align-items: center; /* Вертикальне вирівнювання стрілок та карток */
    justify-content: center; /* Центрування вмісту, якщо карток менше */
    padding: 0 20px; /* Відступи з боків для всієї секції */
    gap: 20px; /* Проміжок між стрілками та обгорткою карток */
}

.nav-arrow {
    background-color: transparent;
    border: none;
    font-size: 30px; /* Розмір стрілок */
    color: #8c7b6a; /* Колір стрілок (коричневий, як посилання в auth) */
    cursor: pointer;
    padding: 10px;
    line-height: 1;
}

    .nav-arrow:hover {
        color: #333; /* Колір стрілок при наведенні */
    }

.cards-wrapper {
    display: flex;
    justify-content: center; /* Або space-around / space-between, якщо потрібно */
    flex-wrap: wrap; /* Дозволяє карткам переноситися */
    gap: 20px; /* Проміжки між картками */
    flex-grow: 1; /* Дозволяє обгортці карток зайняти доступний простір між стрілками */
    /* Можливо, max-width для обгортки, якщо є фіксована кількість карток в ряд */
}

.content-card {
    background-color: #ccb79d; /* Фон картки */
    border: 1px solid #e0d9cf; /* Рамка картки, якщо потрібна */
    border-radius: 4px; /* Закруглення кутів */
    width: calc(33.333% - 20px); /* Приблизно для трьох карток в ряд з урахуванням gap. Адаптуй! */
    /* Або використовуй flex-basis: 300px; flex-grow: 1; для адаптивної ширини */
    min-width: 250px; /* Мінімальна ширина картки */
    aspect-ratio: 4 / 3; /* Співвідношення сторін для картки, щоб були однакові по висоті відносно ширини (опціонально) */
    display: flex;
    flex-direction: column; /* Якщо буде текст під зображенням */
    justify-content: center; /* Центрування вмісту, якщо тільки зображення */
    align-items: center;
    padding: 15px;
    box-sizing: border-box;
    position: relative; /* Для позиціонування іконки "в обране" */
}

    .content-card.alt-bg {
        background-color: #b0a18f; /* Темніший фон для чергування, якщо потрібно */
    }

.card-image-placeholder {
    /* Це тимчасовий плейсхолдер. Коли буде зображення, воно замінить цей div. */
    width: 80%; /* Або 100% */
    height: 70%; /* Або 100%, якщо картка - це тільки зображення */
    background-color: #ddd; /* Колір плейсхолдера */
    display: flex;
    justify-content: center;
    align-items: center;
    color: #777;
    font-size: 16px;
    border-radius: 3px; /* Якщо зображення має мати закруглені кути всередині картки */
}

.favorite-icon {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    font-size: 24px; /* Розмір зірочки */
    color: #8c7b6a; /* Колір зірочки */
    cursor: pointer;
}

    .favorite-icon:hover {
        color: #b0a18f; /* Колір при наведенні */
    }


/* Адаптивність (приклади) */
@media (max-width: 992px) { /* Для планшетів */
    .category-block {
        min-width: calc(33.333% - 0px); /* По 3 блоки в ряд */
        /* border-bottom: 1px solid #e0d9cf; /* Можливо, додати нижній бордер */
    }

    .content-card {
        width: calc(50% - 15px); /* По 2 картки в ряд */
    }
}

@media (max-width: 768px) { /* Для мобільних */
    .category-blocks-section {
        flex-direction: column; /* Блоки категорій один під одним */
        margin-bottom: 20px;
    }

    .category-block {
        width: 100%; /* На всю ширину */
        margin-bottom: 10px; /* Відступ між блоками */
        padding: 20px; /* Зменшити відступи */
        /* border-left: none;
        border-right: none; */
    }

        .category-block:last-child {
            margin-bottom: 0;
        }

    .content-cards-section {
        padding: 0 10px; /* Зменшити бічні відступи */
        gap: 10px;
    }

    .cards-wrapper {
        gap: 10px;
    }

    .content-card {
        width: 100%; /* Одна картка в ряд */
        aspect-ratio: 16 / 9; /* Можна змінити співвідношення для мобільних */
    }

    .nav-arrow {
        font-size: 24px;
        padding: 5px;
    }
}


/* ---------------------------------------------------- */
/* Кінець стилів для головної сторінки (Menu Page)     */
/* ---------------------------------------------------- */



/* ---------------------------------------------------- */
/* Стилі для сторінки Persons (ОНОВЛЕНА СЕКЦІЯ КАРТОК) */
/* ---------------------------------------------------- */

/* ... (стилі для .persons-page-container, .search-panel-section і т.д. залишаються як раніше) ... */
/* В твоєму site.css або main.css, всередині секції стилів для сторінки Persons */

.persons-page-container {
    padding: 20px;
    padding-bottom: 100px; /* Збільшили для прикладу, щоб точно вистачило місця для футера */
}
/* <--- Закриваємо правило для .persons-page-container */

/* Окреме правило для панелі пошуку */
.search-panel-section {
    margin-bottom: 40px;
    max-width: 700px;
    width: 100%;
    padding: 0 15px;
    box-sizing: border-box;
    margin-left: auto;
    margin-right: auto;
}

.search-form {
    display: flex;
    width: 100%; /* Форма займає всю ширину .search-panel-section */
    border: 1px solid #ccb79d;
    border-radius: 6px; /* Можна трохи збільшити радіус для відповідності карткам */
    overflow: hidden;
    background-color: #fff; /* Додамо фон, якщо його немає */
}

.search-input {
    flex-grow: 1;
    border: none;
    padding: 12px 18px; /* Трохи збільшимо відступи для "солідності" */
    font-size: 16px;
    outline: none;
    color: #333; /* Колір тексту вводу */
}

    .search-input::placeholder { /* Стилізація плейсхолдера */
        color: #999;
    }

.search-button {
    background-color: #ccb79d;
    color: white;
    border: none;
    padding: 12px 18px; /* Зробимо однакові відступи з полем вводу */
    cursor: pointer;
    font-size: 16px; /* Для тексту або іконки */
    /* Якщо там тільки іконка, і вона мала, кнопка може бути вузькою.
       Можна додати min-width або фіксовану width, якщо потрібно.
       Наприклад: min-width: 50px; text-align: center; */
    display: flex; /* Для центрування іконки, якщо вона є */
    align-items: center;
    justify-content: center;
}

    .search-button:hover {
        background-color: #b0a18f;
    }

    .search-button .fa-search { /* Якщо використовуєш FontAwesome */
        /* Можливо, потрібно задати розмір для самої іконки */
        font-size: 1em; /* Або конкретне значення */
    }

.persons-grid-section {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
    justify-content: center;
    }

.person-card {
    background-color: #FAF0E6;
    border: 1px solid #dcd0c0;
    border-radius: 8px;
    box-shadow: 0 3px 7px rgba(0, 0, 0, 0.07);
    flex-basis: calc(33.333% - 20px);
    max-width: 350px; /* Можна трохи погратися з цим значенням, наприклад 340-360px */

    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden; /* Важливо, щоб зображення не вилазило за радіус */
}

    .person-card .favorite-icon {
        position: absolute;
        top: 12px;
        right: 12px;
        background: none;
        border: none;
        font-size: 24px;
        color: #8c7b6a;
        cursor: pointer;
        z-index: 2; /* Щоб точно було поверх зображення */
    }

        .person-card .favorite-icon:hover {
            color: #b0a18f;
        }

.person-image-wrapper {
    width: 100%;
    aspect-ratio: 3 / 3.75; /* Зробимо трохи менш високим, ніж 3/4, щоб дати більше місця тексту, але все ще портрет */
    /* Якщо зображення все одно "їдуть", спробуй фіксовану висоту, наприклад: */
    /* height: 280px; */
    /* і прибрати aspect-ratio */
    overflow: hidden;
    position: relative; /* Для можливого позиціонування псевдоелементів, якщо знадобиться */
}

.person-image {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Це має добре працювати */
    object-position: center center; /* Можна спробувати top center, якщо обличчя обрізаються */
    display: block;
}

.person-info {
    padding: 15px;
    text-align: left;
    flex-grow: 1; /* Дозволяє цьому блоку зайняти доступний простір */
    display: flex; /* Додаємо flex для кращого контролю вмісту */
    flex-direction: column; /* Ім'я та опис один під одним */
    justify-content: space-between; /* Розподіляє простір, якщо опис короткий */
}

.person-name {
    font-family: 'Lora', serif;
    font-size: 19px; /* Трохи менше, якщо 20px завеликий */
    font-weight: bold;
    color: #333;
    margin-top: 0;
    margin-bottom: 10px; /* Трохи менший відступ */
    text-align: center;
}

.person-description {
    font-family: 'Open Sans', sans-serif;
    font-size: 14px;
    color: #555;
    line-height: 1.55; /* Трохи підкоригуємо */
    margin-bottom: 0;  /* Прибираємо нижній відступ, якщо він не потрібен */
    overflow: hidden; /* Обрізаємо текст, що не вміщується */
    /* Спроба обмежити текст N рядками (не завжди ідеально) */
    /* Якщо flex-grow: 1 для .person-info, то висота опису буде адаптивною.
       Якщо потрібне жорстке обмеження рядків, тоді краще працювати з фіксованою висотою картки
       або цього блоку, що складніше зробити повністю адаптивним. */
    /* Можна спробувати так для обмеження, якщо картка має достатньо висоти: */
    display: -webkit-box;
    -webkit-line-clamp: 4; /* Спробуємо 4 рядки */
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    /* min-height: calc(1.55em * 4); /* Забезпечити мінімальну висоту для 4 рядків */
}

/* Адаптивність для карток (можна залишити як було, або підкоригувати breakpoints) */
@media (max-width: 1024px) {
    .person-card {
        flex-basis: calc(50% - 15px);
        max-width: none;
    }
}

@media (max-width: 768px) {
    .search-panel-section {
        max-width: 100%;
    }

    .person-card {
        flex-basis: 100%;
        max-width: none;
    }

    .person-name {
        font-size: 18px;
    }

    .person-description {
        /* -webkit-line-clamp: 3; /* 3 рядки для мобільних */
        /* min-height: calc(1.55em * 3); */
    }
}

/* ---------------------------------------------------- */
/* Кінець стилів для сторінки Persons                   */
/* ---------------------------------------------------- */
